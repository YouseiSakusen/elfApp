//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace net.elfmission.WindowsApps.ImageSplitter.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.1.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsDefaultSelectAtLastFolder {
            get {
                return ((bool)(this["IsDefaultSelectAtLastFolder"]));
            }
            set {
                this["IsDefaultSelectAtLastFolder"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string LastOpendPath {
            get {
                return ((string)(this["LastOpendPath"]));
            }
            set {
                this["LastOpendPath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("LargeImage")]
        public global::net.elfmission.WindowsApps.Controls.ThumbNailSize ThumbNailImageSize {
            get {
                return ((global::net.elfmission.WindowsApps.Controls.ThumbNailSize)(this["ThumbNailImageSize"]));
            }
            set {
                this["ThumbNailImageSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Normal")]
        public global::System.Windows.Forms.FormWindowState MainFormWindowState {
            get {
                return ((global::System.Windows.Forms.FormWindowState)(this["MainFormWindowState"]));
            }
            set {
                this["MainFormWindowState"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("800, 600")]
        public global::System.Drawing.Size MainFormSize {
            get {
                return ((global::System.Drawing.Size)(this["MainFormSize"]));
            }
            set {
                this["MainFormSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("CenterScreen")]
        public global::System.Windows.Forms.FormStartPosition MainFormStartPosition {
            get {
                return ((global::System.Windows.Forms.FormStartPosition)(this["MainFormStartPosition"]));
            }
            set {
                this["MainFormStartPosition"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point MainFormPosition {
            get {
                return ((global::System.Drawing.Point)(this["MainFormPosition"]));
            }
            set {
                this["MainFormPosition"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Depth24Bit")]
        public global::System.Windows.Forms.ColorDepth ThumbNailColorDepth {
            get {
                return ((global::System.Windows.Forms.ColorDepth)(this["ThumbNailColorDepth"]));
            }
            set {
                this["ThumbNailColorDepth"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Plugins")]
        public string PluginFolderName {
            get {
                return ((string)(this["PluginFolderName"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ShowFinishedMessage {
            get {
                return ((bool)(this["ShowFinishedMessage"]));
            }
            set {
                this["ShowFinishedMessage"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("BottomLeft")]
        public global::net.elfmission.WindowsApps.ImageSplitter.ViewerFileNamePosition ViewerFormFileNamePosition {
            get {
                return ((global::net.elfmission.WindowsApps.ImageSplitter.ViewerFileNamePosition)(this["ViewerFormFileNamePosition"]));
            }
            set {
                this["ViewerFormFileNamePosition"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("HighlightText")]
        public global::System.Drawing.Color ViewerFormFileNameColor {
            get {
                return ((global::System.Drawing.Color)(this["ViewerFormFileNameColor"]));
            }
            set {
                this["ViewerFormFileNameColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool CloseViewerForm {
            get {
                return ((bool)(this["CloseViewerForm"]));
            }
            set {
                this["CloseViewerForm"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsLeftUseForForward {
            get {
                return ((bool)(this["IsLeftUseForForward"]));
            }
            set {
                this["IsLeftUseForForward"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool AskCloseForViewer {
            get {
                return ((bool)(this["AskCloseForViewer"]));
            }
            set {
                this["AskCloseForViewer"] = value;
            }
        }
    }
}
